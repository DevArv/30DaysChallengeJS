// En este desaf칤o, debes crear la l칩gica de la funci칩n isLeapYear, que determina si un a침o es bisiesto o no. 
//Un a침o es bisiesto si cumple con las siguientes condiciones:

// Es divisible por 4, pero no por 100.
// Si es divisible por 100 debe serlo por 400 tambi칠n.
// La funci칩n isLeapYear recibe un 칰nico par치metro: el a침o a evaluar. Debe devolver true si el a침o es bisiesto o false en caso contrario.

// Toma en cuenta que la funci칩n debe ser capaz de manejar valores no enteros o negativos.

// Ejemplo 1:

// Input: 2000;
// Output: true;

// Ejemplo 2:

// Input: -2024;
// Output: false;

// Ejemplo 3:

// Input: 1984.25;
// Output: false;

function isLeapYear(year) {
    if (year >= 0) {
        if ((year % 4 === 0 && year % 100 !== 0) || (year % 100 === 0 && year % 400 === 0)){
        return true;
        } else {
        return false;
        }
    } else {
      return false;
    }
    
  }
  
  console.log(isLeapYear(2000));
  console.log(isLeapYear(-2024));
  console.log(isLeapYear(1984.25));

// En este desaf칤o recibir치s una serie de tipos de mascotas junto con su edad.

// Dependiendo de estos 2 factores tendr치s que construir la funci칩n llamada getPetExerciseInfo la cual retornar치 una cadena de texto 
//con la informaci칩n necesaria acerca de cuanto ejercicio necesita hacer cada tipo de mascota.

// La funci칩n recibir치 las siguientes mascotas:

// perro
// gato
// ave
// En caso de pasar una mascota la cual no sea de la lista deber치 retornar "Tipo de mascota inv치lida"

// Para cada tipo de mascota, la funci칩n retornar치 diferente informaci칩n basada en la edad.

// Perros
// Si la edad es menor al a침o, deber치 retornar "Los cachorros necesitan peque침as y frecuentes sesiones de juego"
// Si la edad es entre 1 y 7 a침os, deber치 retornar "Los perros a esta edad necesitan caminatas diarias y sesiones de juego"
// Si la edad es mayor a 7 a침os, deber치 retornar "Los perros viejos necesitan caminatas m치s cortas"
// gatos
// Si la edad es menor al a침o, deber치 retornar "Los gatitos necesitan frecuentes sesiones de juego"
// Si la edad es entre 1 y 7 a침os, deber치 retornar "Los gatos a esta edad necesitan jugar diariamente"
// Si la edad es mayor a 7 a침os, deber치 retornar "Los gatos viejos necesitan sesiones de juego m치s cortas"
// aves
// Si la edad es menor al a침o, deber치 retornar "Las aves j칩venes necesitan mucho espacio para volar"
// Si la edad es entre 1 y 7 a침os, deber치 retornar "Las aves necesitan jugar diariamente y un lugar para volar"
// Si la edad es mayor a 7 a침os, deber치 retornar "Las aves mayores necesitan descansar m치s, pero siguen ocupando un lugar para volar"
// Tendr치s inputs y outputs como los siguientes 游녢

// Ejemplo 1:

// Input: getPetExerciseInfo("perro", 3)
// Output: "Los perros a esta edad necesitan caminatas diarias y sesiones de juego"

// Ejemplo 2:

// Input: getPetExerciseInfo("gato", 8)
// Output: "Los gatos viejos necesitan sesiones de juego m치s cortas"

// Ejemplo 3:

// Input: getPetExerciseInfo("Mamut", 25)
// Output: "Tipo de mascota invalida"

function getPetExerciseInfo(type, age) {
    switch (type) {
        case "perro":
            if (age <= 1) {
                console.log("Los cachorros necesitan peque침as y frecuentes sesiones de juego");
            }else if (age <= 7) {
                console.log("Los perros a esta edad necesitan caminatas diarias y sesiones de juego");
            }else if (age > 7) {
                console.log("Los perros viejos necesitan caminatas m치s cortas");
            }else {
                console.log("El perro no es un cachorro");
            }
            break;
        default:
            console.log("Tipo de mascota inv치lida");
    }
}

getPetExerciseInfo("perro", 1);
getPetExerciseInfo("perro", 5);
getPetExerciseInfo("perro", 9);